---
- name: Spotify | Install (Arch)
  kewlfft.aur.aur:
    use: yay
    name:
      - spotify
  when: ansible_distribution == "Archlinux"

- name: Spotify | Install (MacOS)
  ansible.builtin.shell: |
    echo "TODO: Install Spotify for MacOS"
  when: ansible_distribution == 'MacOSX'

- name: Spotify | Spicetify | Installed stat
  ansible.builtin.stat:
    path: /home/thony/.spicetify
  register: spicetify_exist

- name: Spotify | Spicetify | Fetch installation script (if not present)
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/\
          spicetify/spicetify-cli/master/install.sh"
    dest: /tmp/spicetify_setup
    mode: 0755
  when: not spicetify_exist.stat.exists

- name: Spotify | Spicetify | Install (if not present)
  ansible.builtin.shell: /tmp/spicetify_setup
  when: not spicetify_exist.stat.exists

- name: Spotify | Spicetify | Configure chmod on /opt/spotify (Arch)
  ansible.buildin.file:
    path: /opt/spotify
    state: touch
    mode: a+wr
    modification_time: preserve
    access_time: preserve
  when: not spicetify_exist.stat.exists and ansible_distribution == "Archlinux"

- name: Spotify | Spicetify | Configure chmod on /opt/spotify/Apps (Arch)
  ansible.builtin.file:
    path: /opt/spotify/Apps
    state: touch
    mode: a+wr
    modification_time: preserve
    access_time: preserve
    recurse: yes
  when: not spicetify_exist.stat.exists and ansible_distribution == "Archlinux"

- name: Spotify | Spicetify Marketplace | Fetch install script (if not present)
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/spicetify/\
          spicetify-marketplace/main/resources/install.sh"
    dest: /tmp/spicetify_marketplace_setup
    mode: 0755
  when: not spicetify_exist.stat.exists

- name: Spotify | Spicetify Marketplace | Install (if not present)
  ansible.builtin.shell: |
    spicetify
    # Install marketplace to configure themes inside the Spotify client
    /tmp/spicetify_marketplace_setup
    spicetify backup apply enable-devtools
    spicetify update
  become: false
  args:
    warn: no
